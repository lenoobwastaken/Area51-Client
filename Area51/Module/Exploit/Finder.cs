using System.Collections;
using Area51.SDK;
using Il2CppSystem.Collections.Generic;
using MelonLoader;
using UnityEngine;
using VRC.SDKBase;
using VRC.Udon.Common.Interfaces;

namespace Area51.Module.Exploit
{
	internal class Finder : BaseModule
	{
		public Finder()
			: base("Udon Spammer", "Spams Every Udon Object In The World", Main.Instance.Eventexploitbutton, null, isToggle: true, save: true)
		{
		}

		public override void OnEnable()
		{
			MelonCoroutines.Start(UdonKill());
		}

		public override void OnDisable()
		{
			MelonCoroutines.Stop(UdonKill());
		}

		private IEnumerator UdonKill()
		{
			while (toggled)
			{
				for (int i = 0; i < PlayerWrapper.GetAllPlayers().Length; i++)
				{
					if (PlayerWrapper.GetAllPlayers()[i].GetAPIUser().id == PlayerWrapper.LocalPlayer.GetAPIUser().id)
					{
						continue;
					}
					for (int j = 0; j < WorldWrapper.udonBehaviours.Length; j++)
					{
						Dictionary<string, List<uint>>.KeyCollection.Enumerator enumerator = WorldWrapper.udonBehaviours[j]._eventTable.Keys.GetEnumerator();
						while (enumerator.MoveNext())
						{
							string current = enumerator.Current;
							Networking.SetOwner(PlayerWrapper.GetAllPlayers()[i].GetVRCPlayerApi(), WorldWrapper.udonBehaviours[j].gameObject);
							WorldWrapper.udonBehaviours[j].SendCustomNetworkEvent(NetworkEventTarget.Owner, current);
							yield return new WaitForSeconds(0.25f);
						}
						yield return new WaitForSeconds(0.25f);
						if (!toggled)
						{
							break;
						}
					}
					yield return new WaitForSeconds(0.25f);
					if (!toggled)
					{
						break;
					}
				}
				yield return new WaitForSeconds(0.25f);
			}
		}
	}
}
