using System.Collections.Generic;
using Area51.Events;
using Area51.SDK;
using ExitGames.Client.Photon;
using VRC;

namespace Area51.Module.Safety
{
	internal class ExploitLogs : BaseModule, OnEventEvent
	{
		public static VRC.Player player;

		public List<string> BlacklistedPlaylist = new List<string>();

		public static int eventcount = 0;

		public static int eventlimit = 375;

		public static bool Logs;

		public ExploitLogs()
			: base("Logging", "Logs client fags trying to crash!", Main.Instance.Networkbutton, null, isToggle: true)
		{
			Logs = !Logs;
			name = "Logging\n" + (Logs ? "Enabled" : "Disabled");
		}

		public override void OnEnable()
		{
			Main.Instance.OnEventEvents.Add(this);
		}

		public override void OnDisable()
		{
			Main.Instance.OnEventEvents.Remove(this);
			player = null;
		}

		public bool OnEvent(EventData eventData)
		{
			byte code = eventData.Code;
			player = PlayerWrapper.GetPlayerByActorID(eventData.sender);
			if (player == PlayerWrapper.LocalPlayer || eventData.Sender == -1 || eventData.Code == 7 || eventData.Code == 1 || eventData.Code == 8 || eventData.Code == 33 || eventData.Code == 253 || eventData.Code == 254)
			{
				return true;
			}
			if (eventData.Code == 6 || eventData.Code == 9)
			{
				eventcount++;
				if (eventcount > eventlimit)
				{
					LogHandler.Log(LogHandler.Colors.Red, $"[NiggaRin] Event[{eventData.Code}] Ratelimit -> {player.prop_APIUser_0.displayName}");
					LogHandler.LogDebug($"[NiggaRin] Event[{eventData.Code}] Ratelimit -> {player.prop_APIUser_0.displayName}");
					eventcount = 0;
				}
			}
			return true;
		}
	}
}
